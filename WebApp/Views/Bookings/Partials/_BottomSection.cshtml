@using WebApp.Views.Bookings.BookingModels
@model List<BookingWithEventModel>

@{
    var currentSort = Context.Request.Query["sort"].ToString();
    var currentOrder = Context.Request.Query["order"].ToString();

    Func<string, (string nextOrder, string symbol)> nextSortLogic = (string column) =>
    {
        if (currentSort != column) return ("asc", "");
        if (currentOrder == "asc") return ("desc", "▲");
        if (currentOrder == "desc") return ("none", "▼");
        return ("asc", "");
    };
}

<div class="bottom-stack">
    <!-- TOP: Filter + Search -->
    @await Html.PartialAsync("Partials/BottomSectionPartials/_BookingFilterControls", Model)

    <!-- MIDDLE: Table -->
    <div class="booking-table-container">
        <table class="booking-table">
            <thead>
                @await Html.PartialAsync("Partials/BottomSectionPartials/_BookingTableHeader", (currentSort, currentOrder, nextSortLogic))
            </thead>
            <tbody>
                @foreach (var booking in Model)
                {
                    foreach (var ticket in booking.BookedTickets)
                    {
                        @await Html.PartialAsync("Partials/BottomSectionPartials/_BookingRow", (booking, ticket))
                    }
                }
            </tbody>
        </table>
    </div>

    <!-- BOTTOM: Pagination -->
    @await Html.PartialAsync("Partials/BottomSectionPartials/_Pagination")
        
</div>
