@* EventEdit.cshtml *@
@model WebApp.Models.Event.EventViewModels.EventUpdateViewModel
@using Microsoft.AspNetCore.Mvc.Rendering

@section Styles {
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/EditAndNew.css" asp-append-version="true" />
}


@{
    ViewData["Title"] = "Edit Event";
    var id = (ViewData["Id"] as Guid?) ?? Guid.Empty;
    var allowTicketEdit = (ViewData["AllowTicketEdit"] as bool?) == true;
    var categories = ViewData["Categories"] as SelectList;
    var locations = ViewData["Locations"] as SelectList;
}

<h1>@ViewData["Title"]</h1>
<form asp-action="Edit" asp-route-id="@id" method="post">
    @Html.AntiForgeryToken()

    <input asp-for="Id" type="hidden" />

    <div class="form-group">
        <label asp-for="EventName"></label>
        <input asp-for="EventName" class="form-control" />
        <span asp-validation-for="EventName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="EventDescription"></label>
        <textarea asp-for="EventDescription" class="form-control"></textarea>
        <span asp-validation-for="EventDescription" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="ImageUrl"></label>
        <input asp-for="ImageUrl" class="form-control" />
        <span asp-validation-for="ImageUrl" class="text-danger"></span>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="StartDate"></label>
                <input asp-for="StartDate" type="date" class="form-control" />
                <span asp-validation-for="StartDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StartTime"></label>
                <input asp-for="StartTime" type="time" class="form-control" value="@(Model.StartTime.ToString(@"hh\:mm"))" />
                <span asp-validation-for="StartTime" class="text-danger"></span>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="EndDate"></label>
                <input asp-for="EndDate" type="date" class="form-control" />
                <span asp-validation-for="EndDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EndTime"></label>
                <input asp-for="EndTime" type="time" class="form-control" value="@(Model.EndTime.ToString(@"hh\:mm"))" />
                <span asp-validation-for="EndTime" class="text-danger"></span>
            </div>
        </div>
    </div>

    <div class="form-group">
        <label asp-for="CategoryId"></label>
        <select asp-for="CategoryId" asp-items="categories" class="form-control">
            <option value="">-- select a category --</option>
        </select>
        <span asp-validation-for="CategoryId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="EventLocationId"></label>
        <select asp-for="EventLocationId" asp-items="locations" class="form-control">
            <option value="">-- select a venue --</option>
        </select>
        <span asp-validation-for="EventLocationId" class="text-danger"></span>
    </div>

    <h3>Tickets</h3>
    <div id="tickets">
        @for (var i = 0; i < Model.TicketTypes.Count; i++)
        {
            <div class="ticket-item mb-2" id="ticket-@i">
                <!-- tell the binder “here’s an element at index i” -->
                <input name="TicketTypes.Index" type="hidden" value="@i" />
                <input asp-for="TicketTypes[@i].Id" type="hidden" />

                <div class="row ticket-row">
                    <div class="col">
                        <label>Type</label>
                        <input asp-for="TicketTypes[@i].TicketType" class="form-control" />
                    </div>
                    <div class="col">
                        <label>Price</label>
                        <input asp-for="TicketTypes[@i].Price" type="number" step="0.01" class="form-control" />
                    </div>
                    <div class="col">
                        <label>Total</label>
                        <input asp-for="TicketTypes[@i].TotalTickets" type="number" class="form-control" />
                    </div>
                    <div class="col-auto align-self-end">
                        <button type="button"
                                class="btn btn-outline-danger"
                                onclick="removeTicket(@i)">
                            Remove
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
    <button type="button" class="btn btn-secondary mb-3" onclick="addTicket()">Add Ticket</button>
    <button type="submit" class="btn btn-primary">Save Changes</button>
</form>

<script>
    function removeTicket(idx) {
      var item = document.getElementById('ticket-' + idx);
      if (item) item.remove();
    }

    function addTicket() {
      var container = document.getElementById('tickets');
      // count existing .ticket-item wrappers
      var idx = container.querySelectorAll('.ticket-item').length;

      var template = `
      <div class="ticket-item mb-2" id="ticket-${idx}">
        <input name="TicketTypes.Index" type="hidden" value="${idx}" />
        <input name="TicketTypes[${idx}].Id" type="hidden" value="" />

        <div class="row ticket-row">
          <div class="col">
            <label>Type</label>
            <input name="TicketTypes[${idx}].TicketType" class="form-control" />
          </div>
          <div class="col">
            <label>Price</label>
            <input name="TicketTypes[${idx}].Price" type="number" step="0.01" class="form-control" />
          </div>
          <div class="col">
            <label>Total</label>
            <input name="TicketTypes[${idx}].TotalTickets" type="number" class="form-control" />
          </div>
          <div class="col-auto align-self-end">
            <button type="button"
                    class="btn btn-outline-danger"
                    onclick="removeTicket(${idx})">
              Remove
            </button>
          </div>
        </div>
      </div>`;

      container.insertAdjacentHTML('beforeend', template);
    }
</script>